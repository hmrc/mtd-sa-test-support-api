# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName = mtd-sa-test-support-api

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "routing.VersionRoutingRequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"

# Use HttpCLient V2 for outbound HTTP connections
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

# Json error handler
play.http.errorHandler = "utils.ErrorHandler"

play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.cors {
  allowedOrigins = ["http://localhost:9680"]
}

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "config.DIModule"


# Api related config
api {
  # The status of the version of the API for the API Platform.
  1.0 {
    status = "BETA"
    endpoints.enabled = true
  }

  confidence-level-check {
    confidence-level = 200
    definition.enabled = true
    auth-validation.enabled = false
  }

  # The context which the API will have via the API Platform http://API_GATEWAY/{api.gateway.context}/
  gateway.context = "individuals/self-assessment-test-support"
}

# Required for Test Business HATEOAS links
businessDetailsApi {
    gateway.context = "individuals/business/details"
}

# HTTP Verbs related config
bootstrap.http.headersAllowlist = ["Accept", "Gov-Test-Scenario", "Content-Type", "Location", "X-Request-Timestamp", "X-Session-Id", "X-Client-Id"]
internalServiceHostPatterns = ["localhost"]

# Enable metrics and auditing
metrics.enabled = true
auditing.enabled = true

feature-switch {

  version-1 {
    enabled = true
  }

  callAuth.enabled = false
}

microservice {

  services {

    auth {
      host = localhost
      port = 8500
    }

    stub {
      host = 127.0.0.1
      port = 9772
      env = ET
      token = ABCD1234
      environmentHeaders = ["Accept", "Gov-Test-Scenario", "Content-Type", "Location", "X-Request-Timestamp", "X-Session-Id", "X-Request-Id"]
    }

  }
}
